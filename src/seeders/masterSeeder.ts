import * as admin from 'firebase-admin';
import { seedLanguages } from './languageSeeder';
import { seedCurrencies } from './currencySeeder';
import { seedRideSharingServices } from './rideSharingSeeder';
import { seedFavoriteActivities } from './favoriteActivitiesSeeder';
import { seedFitnessInterests } from './fitnessInterestsSeeder';
import { seedCommunicationApps } from './communicationAppsSeeder';
import { seedCommunicationChannels } from './communicationChannelsSeeder';
import { seedExcursionBuckets } from './excursionBucketSeeder';

// Initialize Firebase Admin if not already initialized
if (!admin.apps.length) {
  try {
    // Get project ID from environment variable or use default
    const projectId = process.env['FIREBASE_PROJECT_ID'] || 'nomad-nation-62331';
    
    // Try to initialize with project ID
    admin.initializeApp({
      projectId: projectId
    });
    console.log(`‚úÖ Firebase Admin initialized with project ID: ${projectId}`);
  } catch (error) {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    console.error('‚ùå Failed to initialize Firebase Admin:', errorMessage);
    throw error;
  }
}

export async function seedAll(): Promise<void> {
  try {
    console.log('üöÄ Starting master seeder - populating all collections...\n');
    
    // Run all seeders in sequence
    await seedLanguages();
    console.log('');
    
    await seedCurrencies();
    console.log('');
    
    await seedRideSharingServices();
    console.log('');
    
    await seedFavoriteActivities();
    console.log('');
    
    await seedFitnessInterests();
    console.log('');
    
    await seedCommunicationApps();
    console.log('');
    
    await seedCommunicationChannels();
    console.log('');
    
    await seedExcursionBuckets();
    console.log('');
    
    console.log('üéâ All seeders completed successfully!');
    console.log('üìä Your Firebase Firestore now contains:');
    console.log('   ‚Ä¢ Languages collection');
    console.log('   ‚Ä¢ Currencies collection');
    console.log('   ‚Ä¢ Ride-sharing services collection');
    console.log('   ‚Ä¢ Favorite activities collection');
    console.log('   ‚Ä¢ Fitness interests collection');
    console.log('   ‚Ä¢ Communication apps collection');
    console.log('   ‚Ä¢ Communication channels collection');
    console.log('   ‚Ä¢ Excursion buckets collection');
    
  } catch (error) {
    console.error('üí• Master seeder failed:', error);
    throw error;
  }
}

// Run master seeder if this file is executed directly
if (require.main === module) {
  seedAll()
    .then(() => {
      console.log('\nüéØ Master seeding completed successfully!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\nüí• Master seeding failed:', error);
      process.exit(1);
    });
}
